# Generated by Django 4.0.3 on 2023-09-13 09:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255)),
                ('user_type', models.CharField(choices=[('Passenger', 'Passenger'), ('Driver', 'Driver'), ('Investor', 'Investor'), ('Administrator', 'Administrator'), ('Accounts', 'Accounts'), ('Promoter', 'Promoter'), ('RideAdmin', 'RideAdmin'), ('BigTrucksAdmin', 'BigTrucksAdmin')], default='Passenger', max_length=50)),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=16, unique=True)),
                ('promoter', models.CharField(blank=True, default='admin', max_length=100)),
                ('driver_tracker_sim', models.CharField(blank=True, default='', max_length=100)),
                ('user_blocked', models.BooleanField(default=False)),
                ('unique_code', models.CharField(default='', max_length=500)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RideAdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='ridesadmin_profile_pics')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('unique_code', models.CharField(default='', max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ridesadmin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PromoterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='promoter_profile_pics')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='promoter_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PassengerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='passenger_profile_pics')),
                ('front_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('back_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('name_on_ghana_card', models.CharField(blank=True, max_length=100)),
                ('next_of_kin', models.CharField(blank=True, max_length=100)),
                ('next_of_kin_number', models.CharField(blank=True, max_length=100)),
                ('referral', models.CharField(blank=True, max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('username', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.CharField(blank=True, default='', max_length=100)),
                ('promoter', models.CharField(blank=True, default='', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='p_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvestorsProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='investors_profile_pics')),
                ('front_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('back_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('name_on_ghana_card', models.CharField(blank=True, max_length=100)),
                ('next_of_kin', models.CharField(blank=True, max_length=100)),
                ('next_of_kin_number', models.CharField(blank=True, max_length=100)),
                ('referral', models.CharField(blank=True, max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.CharField(blank=True, default='', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='i_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='profile_pics')),
                ('drivers_license', models.ImageField(blank=True, upload_to='drivers_licenses')),
                ('name_on_licence', models.CharField(blank=True, max_length=100)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('license_expiration_date', models.CharField(blank=True, max_length=12)),
                ('license_plate', models.CharField(blank=True, max_length=100)),
                ('car_name', models.CharField(blank=True, max_length=100)),
                ('car_model', models.CharField(blank=True, max_length=100)),
                ('front_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('back_side_ghana_card', models.ImageField(blank=True, upload_to='ghana_cards')),
                ('name_on_ghana_card', models.CharField(blank=True, max_length=100)),
                ('ghana_card_number', models.CharField(blank=True, max_length=100)),
                ('digital_address', models.CharField(blank=True, max_length=100)),
                ('next_of_kin', models.CharField(blank=True, max_length=100)),
                ('next_of_kin_number', models.CharField(blank=True, max_length=100)),
                ('taxinet_number', models.CharField(default=0, max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('username', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.CharField(blank=True, default='', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='d_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BigTrucksAdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='bigtrucksadmin_profile_pics')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bigtruck_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdministratorsProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='profile_pics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='a_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AddToVerified',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_verified', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verified_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AddCardsUploaded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_cards_profile', to='taxinet_users.passengerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AccountsProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='default_user.png', upload_to='accounts_profile_pics')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='accounts_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
